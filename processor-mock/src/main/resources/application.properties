version=${project.version}
quarkus.websocket.dispatch-to-worker=true
mp.messaging.connector=smallrye-kafka
kafka.auto.offset.reset=latest
kafka.sasl.mechanism=SCRAM-SHA-512
mp.messaging.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

kafka.consumer.group.id=${quarkus.uuid}-${HOSTNAME}
%dev.kafka.consumer.group.id=${quarkus.uuid}

kafka.security.protocol=SASL_PLAINTEXT
%dev.kafka.security.protocol=SASL_SSL

kafka.sasl.jaas.config=${JAAS_CONFIG}
%dev.kafka.sasl.jaas.config=???

kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVER_URL}
%dev.kafka.bootstrap.servers=???

%dev.kafka.ssl.truststore.location=???
%dev.kafka.ssl.truststore.password=???

mp.messaging.incoming.temperature.topic=motor_temperature
mp.messaging.incoming.temperature.group.id=${kafka.consumer.group.id}
mp.messaging.incoming.temperature.auto.offset.reset=${kafka.auto.offset.reset}
mp.messaging.incoming.temperature.security.protocol=${kafka.security.protocol}
mp.messaging.incoming.temperature.sasl.mechanism=${kafka.sasl.mechanism}
mp.messaging.incoming.temperature.sasl.jaas.config=${kafka.sasl.jaas.config}
%dev.mp.messaging.incoming.temperature.group.id=${%dev.kafka.consumer.group.id}
%dev.mp.messaging.incoming.temperature.security.protocol=${%dev.kafka.security.protocol}
%dev.mp.messaging.incoming.temperature.sasl.jaas.config=${%dev.kafka.sasl.jaas.config}
%dev.mp.messaging.incoming.temperature.ssl.truststore.location=${%dev.kafka.ssl.truststore.location}
%dev.mp.messaging.incoming.temperature.ssl.truststore.password=${%dev.kafka.ssl.truststore.password}


mp.messaging.incoming.speed.topic=motor_speed
mp.messaging.incoming.speed.group.id=${kafka.consumer.group.id}
mp.messaging.incoming.speed.auto.offset.reset=${kafka.auto.offset.reset}
mp.messaging.incoming.speed.security.protocol=${kafka.security.protocol}
mp.messaging.incoming.speed.sasl.mechanism=${kafka.sasl.mechanism}
mp.messaging.incoming.speed.sasl.jaas.config=${kafka.sasl.jaas.config}
%dev.mp.messaging.incoming.speed.group.id=${%dev.kafka.consumer.group.id}
%dev.mp.messaging.incoming.speed.security.protocol=${%dev.kafka.security.protocol}
%dev.mp.messaging.incoming.speed.sasl.jaas.config=${%dev.kafka.sasl.jaas.config}
%dev.mp.messaging.incoming.speed.ssl.truststore.location=${%dev.kafka.ssl.truststore.location}
%dev.mp.messaging.incoming.speed.ssl.truststore.password=${%dev.kafka.ssl.truststore.password}


mp.messaging.incoming.noise.topic=motor_noise
mp.messaging.incoming.noise.group.id=${kafka.consumer.group.id}
mp.messaging.incoming.noise.auto.offset.reset=${kafka.auto.offset.reset}
mp.messaging.incoming.noise.security.protocol=${kafka.security.protocol}
mp.messaging.incoming.noise.sasl.mechanism=${kafka.sasl.mechanism}
mp.messaging.incoming.noise.sasl.jaas.config=${kafka.sasl.jaas.config}
%dev.mp.messaging.incoming.noise.group.id=${%dev.kafka.consumer.group.id}
%dev.mp.messaging.incoming.noise.security.protocol=${%dev.kafka.security.protocol}
%dev.mp.messaging.incoming.noise.sasl.jaas.config=${%dev.kafka.sasl.jaas.config}
%dev.mp.messaging.incoming.noise.ssl.truststore.location=${%dev.kafka.ssl.truststore.location}
%dev.mp.messaging.incoming.noise.ssl.truststore.password=${%dev.kafka.ssl.truststore.password}

mp.messaging.incoming.power_consumption.topic=motor_power_consumption
mp.messaging.incoming.power_consumption.group.id=${kafka.consumer.group.id}
mp.messaging.incoming.power_consumption.auto.offset.reset=${kafka.auto.offset.reset}
mp.messaging.incoming.power_consumption.security.protocol=${kafka.security.protocol}
mp.messaging.incoming.power_consumption.sasl.mechanism=${kafka.sasl.mechanism}
mp.messaging.incoming.power_consumption.sasl.jaas.config=${kafka.sasl.jaas.config}
%dev.mp.messaging.incoming.power_consumption.group.id=${%dev.kafka.consumer.group.id}
%dev.mp.messaging.incoming.power_consumption.security.protocol=${%dev.kafka.security.protocol}
%dev.mp.messaging.incoming.power_consumption.sasl.jaas.config=${%dev.kafka.sasl.jaas.config}
%dev.mp.messaging.incoming.power_consumption.ssl.truststore.location=${%dev.kafka.ssl.truststore.location}
%dev.mp.messaging.incoming.power_consumption.ssl.truststore.password=${%dev.kafka.ssl.truststore.password}